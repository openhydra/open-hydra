---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverse-proxy
  namespace: open-hydra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: my-container
        image: docker.io/library/nginx:1.24.0-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - name: k8s-certs
          mountPath: /etc/kubernetes/pki
          readOnly: true
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
      - hostPath:
          path: /etc/kubernetes/pki
          type: DirectoryOrCreate
        name: k8s-certs
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf

---

apiVersion: v1
kind: Service
metadata:
  name: reverse-proxy
  namespace: open-hydra
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: my-app
  sessionAffinity: None
  type: ClusterIP

---

apiVersion: v1
data:
  nginx.conf: |
    # /etc/nginx/nginx.conf

    user  nginx;
    worker_processes  1;

    events {
        worker_connections  1024;
    }

    http {
        upstream api {
          server kubernetes.default.svc:443;
        }
        server {
          listen              80;
          server_name         myapi.myk8s.com;
          location / {
            root /usr/local/nginx/html;
            index index.htm index.html;
          }
          location /api/ {
            client_max_body_size 200M;
            rewrite ^/api(/.*)$ $1 break;
            proxy_pass https://api;
            proxy_ssl_certificate         /etc/kubernetes/pki/apiserver-kubelet-client.crt;
            proxy_ssl_certificate_key     /etc/kubernetes/pki/apiserver-kubelet-client.key;
            proxy_ssl_session_reuse on;
          }
        }
    }
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: open-hydra